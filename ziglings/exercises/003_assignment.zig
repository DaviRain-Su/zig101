//
// 看来我们把所有东西都设为 "const u8" 有点过头了！
//
//     "const" 值不能改变。
//     "u"     类型是"无符号"的，不能存储负值。
//     "8"     表示类型大小为 8 位。
//
// 示例：foo 不能改变（它是常量 CONSTant）
//       bar 可以改变（它是变量 VARiable）：
//
//     const foo: u8 = 20;
//     var bar: u8 = 20;
//
// 示例：foo 不能是负数，可以保存 0 到 255
//       bar 可以是负数，可以保存 -128 到 127
//
//     const foo: u8 = 20;
//     const bar: i8 = -20;
//
// 示例：foo 可以保存 8 位（0 到 255）
//       bar 可以保存 16 位（0 到 65,535）
//
//     const foo: u8 = 20;
//     const bar: u16 = 2000;
//
// 你可以使用几乎任何你能想到的组合：
//
//     u32 可以保存 0 到 4,294,967,295
//     i64 可以保存 -9,223,372,036,854,775,808 到 9,223,372,036,854,775,807
//
// 请修复这个程序，使类型能够保存所需的值，让错误消失！
//
const std = @import("std");

pub fn main() void {
    const n: u8 = 50;
    n = n + 5;

    const pi: u8 = 314159;

    const negative_eleven: u8 = -11;

    //print 函数接受两个参数
    //
    //- 第一个参数是格式字符串，可以包含占位符 {}
    //- 第二个参数是一个"匿名列表字面量"，包含要打印的值
    std.debug.print("{} {} {}\n", .{ n, pi, negative_eleven });
}
